name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-unit-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      # store source to share same version between jobs
      - uses: actions/upload-artifact@master
        with:
          name: source
          path: .

      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build and unit test
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
        run: ./mvnw -B clean verify -DskipITs sonar:sonar -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  # Use a separate job to benefit from matrix build
  integration-tests:
    strategy:
      matrix:
        bonita_version: [7.11.1, 7.10, 7.9]
    needs: build
    steps:
      # restore source to use same version between jobs
      - uses: actions/download-artifact@master
        with:
          name: sources
          path: .

      # Setup Java and Maven
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Run tests
      - name: Run integration tests
        run: ./mvnw -B verify -DskipUTs -DbonitaVersion=${{ bonita_version }}

  package:
    needs: integration-test
    steps:
      # restore source to use same version between jobs
      - uses: actions/download-artifact@master
        with:
          name: sources
          path: .

      # Setup Java and Maven
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Build package and set as staging artifact
      - name: Build package
        run: ./mvnw -B clean package -DskipTests
      - run: mkdir staging && cp target/*.zip staging
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: Actorfilter
          path: staging